<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AbandonedDeath1" xml:space="preserve">
    <value>Abandoned by their coworkers.</value>
  </data>
  <data name="BlastDeath1" xml:space="preserve">
    <value>Exploded.</value>
  </data>
  <data name="BlastDeath2" xml:space="preserve">
    <value>Went out with a bang.</value>
  </data>
  <data name="BlastDeath3" xml:space="preserve">
    <value>Was blown to smithereens.</value>
  </data>
  <data name="BludgeoningDeath1" xml:space="preserve">
    <value>Bludgeoned to death.</value>
  </data>
  <data name="CrushingDeath1" xml:space="preserve">
    <value>Crushed to death.</value>
  </data>
  <data name="DrowningDeath1" xml:space="preserve">
    <value>Drowned to death.</value>
  </data>
  <data name="ElectrocutionDeath1" xml:space="preserve">
    <value>Electrocuted to death.</value>
  </data>
  <data name="Enemy_BaboonHawkDeath1" xml:space="preserve">
    <value>Was eaten by a Baboon Hawk.</value>
  </data>
  <data name="Enemy_BaboonHawkDeath2" xml:space="preserve">
    <value>Was mauled by a Baboon Hawk.</value>
  </data>
  <data name="Enemy_BrackenDeath1" xml:space="preserve">
    <value>Had their neck snapped by a Bracken.</value>
  </data>
  <data name="Enemy_BrackenDeath2" xml:space="preserve">
    <value>Stared at a Bracken too long.</value>
  </data>
  <data name="Enemy_BunkerSpiderDeath1" xml:space="preserve">
    <value>Ensnared in the Bunker Spider's web.</value>
  </data>
  <data name="Enemy_CircuitBeesDeath1" xml:space="preserve">
    <value>Electro-stung to death by Circuit Bees.</value>
  </data>
  <data name="Enemy_CoilHeadDeath1" xml:space="preserve">
    <value>Mauled to death by a Coil Head.</value>
  </data>
  <data name="Enemy_CoilHeadDeath2" xml:space="preserve">
    <value>Got in a staring contest with a Coil Head.</value>
  </data>
  <data name="Enemy_CoilHeadDeath3" xml:space="preserve">
    <value>Lost a staring contest with a Coil Head.</value>
  </data>
  <data name="Enemy_EarthLeviathanDeath1" xml:space="preserve">
    <value>Swallowed whole by an Earth Leviathan.</value>
  </data>
  <data name="Enemy_EyelessDogDeath1" xml:space="preserve">
    <value>Was eaten by an Eyeless Dog.</value>
  </data>
  <data name="Enemy_EyelessDogDeath2" xml:space="preserve">
    <value>Got caught using a mechanical keyboard.</value>
  </data>
  <data name="Enemy_EyelessDogDeath3" xml:space="preserve">
    <value>Wasn't quiet around an Eyeless Dog.</value>
  </data>
  <data name="Enemy_ForestGiantDeath1" xml:space="preserve">
    <value>Swallowed whole by a Forest Giant.</value>
  </data>
  <data name="Enemy_GhostGirlDeath1" xml:space="preserve">
    <value>Died a mysterious death.</value>
  </data>
  <data name="Enemy_GhostGirlDeath2" xml:space="preserve">
    <value>Lost their mind.</value>
  </data>
  <data name="Enemy_GhostGirlDeath3" xml:space="preserve">
    <value>Got a real bad headache.</value>
  </data>
  <data name="Enemy_GhostGirlDeath4" xml:space="preserve">
    <value>???</value>
  </data>
  <data name="Enemy_HoarderBugDeath1" xml:space="preserve">
    <value>Was mauled by a Hoarder Bug.</value>
  </data>
  <data name="Enemy_HoarderBugDeath2" xml:space="preserve">
    <value>Was swarmed by a Hoarder Bug.</value>
  </data>
  <data name="Enemy_HoarderBugDeath3" xml:space="preserve">
    <value>Was hoarded by a Hoarder Bug.</value>
  </data>
  <data name="Enemy_HoarderBugDeath4" xml:space="preserve">
    <value>Tried to steal from a Hoarder Bug.</value>
  </data>
  <data name="Enemy_HygrodereDeath1" xml:space="preserve">
    <value>Was absorbed by a Hygrodere.</value>
  </data>
  <data name="Enemy_HygrodereDeath2" xml:space="preserve">
    <value>Got lost in the sauce.</value>
  </data>
  <data name="Enemy_HygrodereDeath3" xml:space="preserve">
    <value>Had an oopsie with a Hygrodere.</value>
  </data>
  <data name="Enemy_JesterDeath1" xml:space="preserve">
    <value>Mauled to death by a Jester.</value>
  </data>
  <data name="Enemy_JesterDeath2" xml:space="preserve">
    <value>Was the butt of the Jester's joke.</value>
  </data>
  <data name="Enemy_JesterDeath3" xml:space="preserve">
    <value>Got pranked by the Jester.</value>
  </data>
  <data name="Enemy_JesterDeath4" xml:space="preserve">
    <value>Got popped like a weasel.</value>
  </data>
  <data name="Enemy_MaskedPlayer_VictimDeath1" xml:space="preserve">
    <value>Was killed by a Masked coworker.</value>
  </data>
  <data name="Enemy_MaskedPlayer_VictimDeath2" xml:space="preserve">
    <value>Became a tragedy at the hands of the Mask.</value>
  </data>
  <data name="Enemy_MaskedPlayer_WearDeath1" xml:space="preserve">
    <value>Donned the Mask.</value>
  </data>
  <data name="Enemy_MaskedPlayer_WearDeath2" xml:space="preserve">
    <value>Nobody cared who they were until they put on the Mask.</value>
  </data>
  <data name="Enemy_Nutcracker_KickedDeath1" xml:space="preserve">
    <value>Was kicked to death by a Nutcracker.</value>
  </data>
  <data name="Enemy_Nutcracker_KickedDeath2" xml:space="preserve">
    <value>Got their nuts cracked by a Nutcracker.</value>
  </data>
  <data name="Enemy_Nutcracker_ShotDeath1" xml:space="preserve">
    <value>Got shot by a Nutcracker.</value>
  </data>
  <data name="Enemy_Nutcracker_ShotDeath2" xml:space="preserve">
    <value>Was at the wrong end of a 21-gun salute.</value>
  </data>
  <data name="Enemy_SnareFleaDeath1" xml:space="preserve">
    <value>Was suffocated by a Snare Flea.</value>
  </data>
  <data name="Enemy_SporeLizardDeath1" xml:space="preserve">
    <value>Was bitten by a Spore Lizard.</value>
  </data>
  <data name="Enemy_SporeLizardDeath2" xml:space="preserve">
    <value>Was puffed by a Spore Lizard.</value>
  </data>
  <data name="Enemy_ThumperDeath1" xml:space="preserve">
    <value>Was ravaged by a Thumper.</value>
  </data>
  <data name="Enemy_ThumperDeath2" xml:space="preserve">
    <value>Got thumped by a Thumper.</value>
  </data>
  <data name="FunnyNote1" xml:space="preserve">
    <value>The goofiest goober.</value>
  </data>
  <data name="FunnyNote10" xml:space="preserve">
    <value>Dislikes smoke.</value>
  </data>
  <data name="FunnyNote11" xml:space="preserve">
    <value>A team player.</value>
  </data>
  <data name="FunnyNote12" xml:space="preserve">
    <value>A real go-getter.</value>
  </data>
  <data name="FunnyNote13" xml:space="preserve">
    <value>Ate the most snacks.</value>
  </data>
  <data name="FunnyNote14" xml:space="preserve">
    <value>Passed GO and collected $200.</value>
  </data>
  <data name="FunnyNote15" xml:space="preserve">
    <value>Got freaky on a Friday night.</value>
  </data>
  <data name="FunnyNote16" xml:space="preserve">
    <value>I think this one's a serial killer.</value>
  </data>
  <data name="FunnyNote17" xml:space="preserve">
    <value>Perfectly unremarkable.</value>
  </data>
  <data name="FunnyNote18" xml:space="preserve">
    <value>Hasn't called their mother in a while.</value>
  </data>
  <data name="FunnyNote19" xml:space="preserve">
    <value>Has IP address 127.0.0.1.</value>
  </data>
  <data name="FunnyNote2" xml:space="preserve">
    <value>The cutest employee.</value>
  </data>
  <data name="FunnyNote20" xml:space="preserve">
    <value>Secretly a lizard.</value>
  </data>
  <data name="FunnyNote3" xml:space="preserve">
    <value>Had the most fun.</value>
  </data>
  <data name="FunnyNote4" xml:space="preserve">
    <value>Had the least fun.</value>
  </data>
  <data name="FunnyNote5" xml:space="preserve">
    <value>The bravest employee.</value>
  </data>
  <data name="FunnyNote6" xml:space="preserve">
    <value>Did a sick flip.</value>
  </data>
  <data name="FunnyNote7" xml:space="preserve">
    <value>Stubbed their toe.</value>
  </data>
  <data name="FunnyNote8" xml:space="preserve">
    <value>The most likely to die next time.</value>
  </data>
  <data name="FunnyNote9" xml:space="preserve">
    <value>The least likely to die next time.</value>
  </data>
  <data name="GravityDeath1" xml:space="preserve">
    <value>Fell to their death.</value>
  </data>
  <data name="GravityDeath2" xml:space="preserve">
    <value>Fell off a cliff.</value>
  </data>
  <data name="GunshotsDeath1" xml:space="preserve">
    <value>Shot to death.</value>
  </data>
  <data name="GunshotsDeath2" xml:space="preserve">
    <value>Filled to the brim with bullets.</value>
  </data>
  <data name="KickingDeath1" xml:space="preserve">
    <value>Kicked to death.</value>
  </data>
  <data name="MaulingDeath1" xml:space="preserve">
    <value>Mauled to death.</value>
  </data>
  <data name="Other_DepositItemsDeskDeath1" xml:space="preserve">
    <value>Received a demotion.</value>
  </data>
  <data name="Other_DepositItemsDeskDeath2" xml:space="preserve">
    <value>Was put on disciplinary leave.</value>
  </data>
  <data name="Other_DropshipDeath1" xml:space="preserve">
    <value>Was crushed by the Item Dropship.</value>
  </data>
  <data name="Other_DropshipDeath2" xml:space="preserve">
    <value>Couldn't wait for their items.</value>
  </data>
  <data name="Other_DropshipDeath3" xml:space="preserve">
    <value>Got too impatient for their items.</value>
  </data>
  <data name="Other_LandmineDeath1" xml:space="preserve">
    <value>Stepped on a landmine.</value>
  </data>
  <data name="Other_LightningDeath1" xml:space="preserve">
    <value>Was struck by lightning.</value>
  </data>
  <data name="Other_TurretDeath1" xml:space="preserve">
    <value>Got shot by a turret.</value>
  </data>
  <data name="Player_Jetpack_BlastDeath1" xml:space="preserve">
    <value>Blew up while using a Jetpack.</value>
  </data>
  <data name="Player_Jetpack_BlastDeath2" xml:space="preserve">
    <value>Turned into a firework.</value>
  </data>
  <data name="Player_Jetpack_GravityDeath1" xml:space="preserve">
    <value>Fell while using a jetpack.</value>
  </data>
  <data name="Player_Jetpack_GravityDeath2" xml:space="preserve">
    <value>Flew too close to the sun.</value>
  </data>
  <data name="Player_Jetpack_GravityDeath3" xml:space="preserve">
    <value>Ran out of fuel.</value>
  </data>
  <data name="Player_Murder_MeleeDeath1" xml:space="preserve">
    <value>Was bludgeoned to death by a coworker.</value>
  </data>
  <data name="Player_Murder_MeleeDeath2" xml:space="preserve">
    <value>Was the victim of a murder.</value>
  </data>
  <data name="Player_Murder_MeleeDeath3" xml:space="preserve">
    <value>Got murdered.</value>
  </data>
  <data name="Player_Murder_MeleeDeath4" xml:space="preserve">
    <value>Got backstabbed by a coworker.</value>
  </data>
  <data name="Player_Murder_ShotgunDeath1" xml:space="preserve">
    <value>Was shot to death by a coworker.</value>
  </data>
  <data name="Player_Murder_ShotgunDeath2" xml:space="preserve">
    <value>Was the victim of a murder.</value>
  </data>
  <data name="Player_Murder_ShotgunDeath3" xml:space="preserve">
    <value>Got murdered.</value>
  </data>
  <data name="Player_Murder_ShotgunDeath4" xml:space="preserve">
    <value>Got one-pumped by a coworker.</value>
  </data>
  <data name="Player_Murder_ShotgunDeath5" xml:space="preserve">
    <value>Got 360-noscoped by a coworker.</value>
  </data>
  <data name="Player_QuicksandDeath1" xml:space="preserve">
    <value>Got stuck in quicksand.</value>
  </data>
  <data name="Player_QuicksandDeath2" xml:space="preserve">
    <value>Drowned in quicksand.</value>
  </data>
  <data name="Player_StunGrenadeDeath1" xml:space="preserve">
    <value>Got flashbanged by a coworker.</value>
  </data>
  <data name="Player_StunGrenadeDeath2" xml:space="preserve">
    <value>Was the victim of a murder.</value>
  </data>
  <data name="StrangulationDeath1" xml:space="preserve">
    <value>Strangled to death.</value>
  </data>
  <data name="SuffocationDeath1" xml:space="preserve">
    <value>Suffocated to death.</value>
  </data>
  <data name="TextMesh" xml:space="preserve">
    <value>Cause of Death: </value>
  </data>
  <data name="UnknownDeath1" xml:space="preserve">
    <value>Died somehow.</value>
  </data>
  <data name="UnknownDeath2" xml:space="preserve">
    <value>Most sincerely dead.</value>
  </data>
  <data name="UnknownDeath3" xml:space="preserve">
    <value>Expired in an inexplicable manner.</value>
  </data>
</root>